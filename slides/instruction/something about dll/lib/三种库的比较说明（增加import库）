//ppt中没有详细说明导入库，在此做一个补充，并且比较区分导入库和静态库
##比较动态链接库、静态库、import库区别（主要补充import库）
在windows下一般可以看到后缀为dll和后缀为lib的文件，但这两种文件可以分为三种库，
分别是动态链接库（Dynamic Linked Library），静态库(Static Library)和导入库（Import Library），下面一一说明这三种库。

1.动态链接库(Dynamic Linked Library)：
Windows为应用程序提供了丰富的函数调用，这些函数调用都包含在动态链接库中。
其中有3个最重要的DLL，
*Kernel32.dll 
它包含那些用于管理内存、进程和线程的函数，例如CreateThread函数； 
*User32.dll 
它包含那些用于执行用户界面任务(如窗口的创建和消息的传送)的函数，例如CreateWindow函数； 
*GDI32.dll 
它包含那些用于画图和显示文本的函数。

2.静态库(Static Library)：
函数和数据被编译进一个二进制文件(通常扩展名为.LIB)。在使用静态库的情况下，在编译链接可执行文件时，
链接器从库中复制这些函数和数据并把它们和应用程序的其它模块组合起来创建最终的可执行文件(.EXE文件)。

3.导入库(Import Library)：
在使用动态链接库的时候，往往提供两个文件：一个引入库和一个DLL。
引入库包含被DLL导出的函数和变量的符号名，DLL包含实际的函数和数据。
在编译链接可执行文件时，只需要链接引入库，DLL中的函数代码和数据并不复制到可执行文件中，在运行的时候，再去加载DLL，访问DLL中导出的函数。

在运行Windows程序时，它通过一个被称作“动态链接”的进程与Windows相接。
一个Windows的.EXE文件拥有它使用不同动态链接库的引用，所使用的函数即在那里。
当Windows程序被加载到内存中时，程序中的调用被指向DLL函数的入口，如果DLL不在内存中，系统就将其加载到内存中。

当链接Windows程序以产生一个可执行文件时，必须链接由编程环境提供的专门的“导入库(import library)库”。
这些导入库包含了动态链接库名称和所有Windows函数调用的引用信息。
链接程序使用该信息在.EXE文件中构造一个表，当加载程序时，Windows使用它将调用转换为Windows函数。

##静态库与导入库的区别：
导入库和静态库实质是不一样的东西，区别很大。
静态库本身就包含了实际执行代码、符号表等等，而对于导入库而言，其实际的执行代码位于动态库中，
导入库只包含了地址符号表等，确保程序找到对应函数的一些基本地址信息。

##如何区分windows 导入库与静态库：
windows中，动态库包括xx.dll和xx.lib两部分。静态库包含yy.lib。
此处有种lib，一种称为动态库中的导入库，xx.lib。一种称为静态库的yy.lib，区分方法如下：
第一看大小，导入库一般都很小，大的也只有几k，而静态库则很大，小则几M，大则几十M。
第二就要通过命令的方式来查看。（如lib /list Demo.lib）